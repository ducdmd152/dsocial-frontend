import { VStack } from "@chakra-ui/react";
import React from "react";
import PostCreator from "./PostCreator";
import useFetchPosts from "../hooks/useFetchPosts";
import PostList from "./PostList";
import { HttpUser } from "../services/user-service";
import postService, { HttpPost } from "../services/post-service";
interface Props {
  user: HttpUser;
}
const PostArea = ({ user }: Props) => {
  const fetchPostResult = useFetchPosts();
  const { posts, setPosts, setError } = fetchPostResult;

  const addPost = (post: HttpPost) => {
    const originalPosts = [...posts];
    setPosts([post, ...posts]);

    postService
      .create(post) // pass the new user
      .then(({ data: savedPost }) => setPosts([savedPost, ...posts]))
      // should refresh users since new id for user was generated by server
      .catch((err) => {
        setError(err.message);
        setPosts(originalPosts);
      });
  };

  return (
    <>
      <VStack paddingX={3} paddingTop="6">
        <PostCreator
          user={user}
          onCreate={(content) =>
            addPost({
              id: 0,
              userId: user.id,
              content: content,
              time: new Date(),
            })
          }
        />

        <PostList fetchPostResult={fetchPostResult} />
      </VStack>
    </>
  );
};
export default PostArea;
